name: Тесты и раскатка в тестовую среду

on:
  push:
    branches: ["main"]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    name: Проверяем стили
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - uses: pnpm/action-setup@v2
        with:
          version: 7.26.3

      - uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "pnpm"

      - name: Install
        run: pnpm install

      - name: Check
        run: pnpm lint && pnpm stylelint

  test-format:
    name: Выполняем тесты
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - uses: pnpm/action-setup@v2
        with:
          version: 7.26.3

      - uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "pnpm"

      - name: Install
        run: pnpm install

      - name: Check
        run: pnpm test

  build-and-push-image:
    name: Собираем тестовый Docker
    runs-on: ubuntu-latest
    needs:
      - test
      - test-format
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=tag,enable=${{ startsWith(github.ref, 'refs/tags/v') }}
            type=raw,value=latest,enable=${{ startsWith(github.ref, 'refs/tags/v') }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          file: ./deployment/Dockerfile
          context: .
          push: true
          build-args: |
            BUILD_MODE=testing
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy-dev:
    name: Раскатываем тестовый Docker
    runs-on: [self-hosted, Linux]
    needs: build-and-push-image
    environment:
      name: Testing
      url: https://app.test.profcomff.com/
    env:
      CONTAITER_NAME: com_profcomff_app
    permissions:
      packages: read
    steps:
      - name: Run docker container
        run: |
          docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:test
          docker stop ${{ env.CONTAITER_NAME }} || true && docker rm ${{ env.CONTAITER_NAME }} || true
          docker run \
            --detach \
            --restart on-failure:3 \
            --network=web \
            --name ${{ env.CONTAITER_NAME }} \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:test
      # TODO: Переехать на CI/CD API
      # - name: Deploy
      #   run: |
      #     curl -X 'POST' \
      #       'https://api.profcomff.com/cicd/test/pr_run' \
      #       -H 'accept: application/json' \
      #       -H 'Content-Type: application/json' \
      #       -H 'Authorization: ${{ secrets.CI_DYAKOVSPACE_MSK_TOKEN }}' \
      #       -d '{
      #         "repo_url": "${{ github.repository }}",
      #         "git_ref": "${{ github.ref }}"
      #       }'
